{"ast":null,"code":"// api.js - Should look like this (no changes needed from your working version)\nimport axios from \"axios\";\n\n// Ensure this points to your running backend\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5050\";\nexport const fetchAirports = async (sortBy = \"name\", order = \"asc\", filter = \"\", page = 1, limit = 50) => {\n  try {\n    const response = await axios.get(`${API_URL}/airports`, {\n      params: {\n        sortBy,\n        order,\n        filter,\n        page,\n        limit\n      } // filter is correctly passed here\n    });\n\n    // Assuming backend responds with { data: [airports], total: number, page: number, limit: number }\n    const {\n      data,\n      total,\n      page: responsePage,\n      limit: responseLimit\n    } = response.data;\n    return {\n      airports: data || [],\n      // Ensure airports is always an array\n      total: total || 0,\n      page: responsePage || page,\n      limit: responseLimit || limit\n    };\n  } catch (error) {\n    console.error(\"Error fetching airports:\", error);\n    // Return empty state on error to prevent crashes\n    return {\n      airports: [],\n      total: 0,\n      page: 1,\n      limit\n    };\n    // Or re-throw the error if App.js handles it explicitly\n    // throw error;\n  }\n};\n\n// fetchAirport, addAirport, deleteAirport, fetchStatistics remain the same...\n\nexport const fetchAirport = async icao => {\n  try {\n    const response = await axios.get(`${API_URL}/airports/${icao}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching airport ${icao}:`, error);\n    throw error;\n  }\n};\nexport const addAirport = async airportData => {\n  try {\n    const response = await axios.post(`${API_URL}/airports`, airportData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding airport:\", error);\n    throw error; // Re-throw to be handled by the form component\n  }\n};\nexport const deleteAirport = async icao => {\n  try {\n    const response = await axios.delete(`${API_URL}/airports/${icao}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting airport ${icao}:`, error);\n    throw error; // Re-throw to be handled by the form component\n  }\n};\nexport const fetchStatistics = async () => {\n  try {\n    var _noIata$data;\n    const [averageElevation, noIata, topTimezones, elevationPerCountry] = await Promise.all([axios.get(`${API_URL}/scripts/average-elevation`), axios.get(`${API_URL}/scripts/no-iata`), axios.get(`${API_URL}/scripts/top-timezones?limit=10`), axios.get(`${API_URL}/scripts/average-elevation-per-country`)]);\n    return {\n      averageElevation: averageElevation.data.average || 0,\n      noIataCount: ((_noIata$data = noIata.data) === null || _noIata$data === void 0 ? void 0 : _noIata$data.length) || 0,\n      // Add safe access\n      noIataAirports: noIata.data || [],\n      topTimezones: topTimezones.data || [],\n      elevationPerCountry: elevationPerCountry.data || []\n    };\n  } catch (error) {\n    console.error(\"Error fetching statistics:\", error);\n    // Return default structure on error\n    return {\n      averageElevation: 0,\n      noIataCount: 0,\n      noIataAirports: [],\n      topTimezones: [],\n      elevationPerCountry: []\n    };\n    // Or re-throw\n    // throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","fetchAirports","sortBy","order","filter","page","limit","response","get","params","data","total","responsePage","responseLimit","airports","error","console","fetchAirport","icao","addAirport","airportData","post","deleteAirport","delete","fetchStatistics","_noIata$data","averageElevation","noIata","topTimezones","elevationPerCountry","Promise","all","average","noIataCount","length","noIataAirports"],"sources":["/Users/I528952/Downloads/airportv3/frontend/src/services/api.js"],"sourcesContent":["// api.js - Should look like this (no changes needed from your working version)\nimport axios from \"axios\";\n\n// Ensure this points to your running backend\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5050\";\n\nexport const fetchAirports = async (sortBy = \"name\", order = \"asc\", filter = \"\", page = 1, limit = 50) => {\n  try {\n    const response = await axios.get(`${API_URL}/airports`, {\n      params: { sortBy, order, filter, page, limit }, // filter is correctly passed here\n    });\n\n    // Assuming backend responds with { data: [airports], total: number, page: number, limit: number }\n    const { data, total, page: responsePage, limit: responseLimit } = response.data;\n\n    return {\n      airports: data || [], // Ensure airports is always an array\n      total: total || 0,\n      page: responsePage || page,\n      limit: responseLimit || limit,\n    };\n  } catch (error) {\n    console.error(\"Error fetching airports:\", error);\n    // Return empty state on error to prevent crashes\n    return { airports: [], total: 0, page: 1, limit };\n    // Or re-throw the error if App.js handles it explicitly\n    // throw error;\n  }\n};\n\n// fetchAirport, addAirport, deleteAirport, fetchStatistics remain the same...\n\nexport const fetchAirport = async (icao) => {\n  try {\n    const response = await axios.get(`${API_URL}/airports/${icao}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error fetching airport ${icao}:`, error);\n    throw error;\n  }\n};\n\nexport const addAirport = async (airportData) => {\n  try {\n    const response = await axios.post(`${API_URL}/airports`, airportData);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding airport:\", error);\n    throw error; // Re-throw to be handled by the form component\n  }\n};\n\nexport const deleteAirport = async (icao) => {\n  try {\n    const response = await axios.delete(`${API_URL}/airports/${icao}`);\n    return response.data;\n  } catch (error) {\n    console.error(`Error deleting airport ${icao}:`, error);\n    throw error; // Re-throw to be handled by the form component\n  }\n};\n\nexport const fetchStatistics = async () => {\n  try {\n    const [averageElevation, noIata, topTimezones, elevationPerCountry] = await Promise.all([\n      axios.get(`${API_URL}/scripts/average-elevation`),\n      axios.get(`${API_URL}/scripts/no-iata`),\n      axios.get(`${API_URL}/scripts/top-timezones?limit=10`),\n      axios.get(`${API_URL}/scripts/average-elevation-per-country`),\n    ]);\n\n    return {\n      averageElevation: averageElevation.data.average || 0,\n      noIataCount: noIata.data?.length || 0, // Add safe access\n      noIataAirports: noIata.data || [],\n      topTimezones: topTimezones.data || [],\n      elevationPerCountry: elevationPerCountry.data || [],\n    };\n  } catch (error) {\n    console.error(\"Error fetching statistics:\", error);\n    // Return default structure on error\n    return {\n        averageElevation: 0,\n        noIataCount: 0,\n        noIataAirports: [],\n        topTimezones: [],\n        elevationPerCountry: [],\n    };\n    // Or re-throw\n    // throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}