{"ast":null,"code":"var _jsxFileName = \"/Users/I528952/Downloads/airportv3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AirportTable from './components/AirportTable'; // Import the AirportTable component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [airports, setAirports] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [pagination, setPagination] = useState({\n    page: 1,\n    limit: 10,\n    total: 0\n  });\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n  useEffect(() => {\n    // Fetch airports data from API and update state\n    const fetchAirports = async () => {\n      const response = await fetch('/api/airports');\n      const data = await response.json();\n      setAirports(data);\n      setPagination(prev => ({\n        ...prev,\n        total: data.length\n      }));\n    };\n    fetchAirports();\n  }, []);\n  const handleSort = (field, order) => {\n    setSortBy(field);\n    setSortOrder(order);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search Airports\",\n      value: searchQuery,\n      onChange: e => setSearchQuery(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AirportTable, {\n      airports: airports,\n      searchQuery: searchQuery,\n      sortBy: sortBy,\n      sortOrder: sortOrder,\n      onSort: handleSort,\n      pagination: pagination,\n      setPagination: setPagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"AzEfU5EOKrjrVwWMRQWvyxeokMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AirportTable","jsxDEV","_jsxDEV","App","_s","airports","setAirports","searchQuery","setSearchQuery","pagination","setPagination","page","limit","total","sortBy","setSortBy","sortOrder","setSortOrder","fetchAirports","response","fetch","data","json","prev","length","handleSort","field","order","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onSort","_c","$RefreshReg$"],"sources":["/Users/I528952/Downloads/airportv3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AirportTable from './components/AirportTable'// Import the AirportTable component\n\nconst App = () => {\n  const [airports, setAirports] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [pagination, setPagination] = useState({ page: 1, limit: 10, total: 0 });\n  const [sortBy, setSortBy] = useState('name');\n  const [sortOrder, setSortOrder] = useState('asc');\n\n  useEffect(() => {\n    // Fetch airports data from API and update state\n    const fetchAirports = async () => {\n      const response = await fetch('/api/airports');\n      const data = await response.json();\n      setAirports(data);\n      setPagination((prev) => ({ ...prev, total: data.length }));\n    };\n    fetchAirports();\n  }, []);\n\n  const handleSort = (field, order) => {\n    setSortBy(field);\n    setSortOrder(order);\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Search Airports\"\n        value={searchQuery}\n        onChange={(e) => setSearchQuery(e.target.value)}\n      />\n      <AirportTable\n        airports={airports}\n        searchQuery={searchQuery}\n        sortBy={sortBy}\n        sortOrder={sortOrder}\n        onSort={handleSort}\n        pagination={pagination}\n        setPagination={setPagination}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,IAAI,EAAE,CAAC;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAE,CAAC,CAAC;EAC9E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC;EAC5C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClChB,WAAW,CAACe,IAAI,CAAC;MACjBX,aAAa,CAAEa,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAEV,KAAK,EAAEQ,IAAI,CAACG;MAAO,CAAC,CAAC,CAAC;IAC5D,CAAC;IACDN,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,UAAU,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IACnCZ,SAAS,CAACW,KAAK,CAAC;IAChBT,YAAY,CAACU,KAAK,CAAC;EACrB,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MACE2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,iBAAiB;MAC7BC,KAAK,EAAExB,WAAY;MACnByB,QAAQ,EAAGC,CAAC,IAAKzB,cAAc,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFpC,OAAA,CAACF,YAAY;MACXK,QAAQ,EAAEA,QAAS;MACnBE,WAAW,EAAEA,WAAY;MACzBO,MAAM,EAAEA,MAAO;MACfE,SAAS,EAAEA,SAAU;MACrBuB,MAAM,EAAEd,UAAW;MACnBhB,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA;IAAc;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClC,EAAA,CA1CID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}