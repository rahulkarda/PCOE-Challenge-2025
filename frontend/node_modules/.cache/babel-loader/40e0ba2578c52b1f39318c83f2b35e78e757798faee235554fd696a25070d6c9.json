{"ast":null,"code":"var _jsxFileName = \"/Users/I528952/Downloads/airportv3/frontend/src/components/AirportForm.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { fetchAirports } from \"../services/api\"; // Example service to fetch airports\nimport AirportForm from './AirportForm'; // Import the form component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [airports, setAirports] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch airports from the API\n  const loadAirports = async () => {\n    try {\n      const data = await fetchAirports(); // Adjust based on your API\n      setAirports(data.data);\n    } catch (error) {\n      console.error('Error fetching airports:', error);\n    }\n  };\n  useEffect(() => {\n    loadAirports();\n  }, []); // Empty dependency array to run only on mount\n\n  // Handle the success of adding an airport\n  const handleSuccess = () => {\n    loadAirports(); // Reload airports after successful form submission\n    setShowForm(false); // Close the form\n  };\n  const handleCancel = () => {\n    setShowForm(false); // Close the form without adding an airport\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Airports\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowForm(true),\n      children: \"Add New Airport\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(AirportForm, {\n      onCancel: handleCancel,\n      onSuccess: handleSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Airport List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: airports.map(airport => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: airport.name\n        }, airport.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) // Adjust based on your data structure\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"tLOmyUEjY4RkyqgSXEqQLT8S6XY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","fetchAirports","AirportForm","jsxDEV","_jsxDEV","App","_s","airports","setAirports","showForm","setShowForm","loadAirports","data","error","console","handleSuccess","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onCancel","onSuccess","map","airport","name","id","_c","$RefreshReg$"],"sources":["/Users/I528952/Downloads/airportv3/frontend/src/components/AirportForm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchAirports } from \"../services/api\"; // Example service to fetch airports\nimport AirportForm from './AirportForm'; // Import the form component\n\nconst App = () => {\n  const [airports, setAirports] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n\n  // Fetch airports from the API\n  const loadAirports = async () => {\n    try {\n      const data = await fetchAirports(); // Adjust based on your API\n      setAirports(data.data);\n    } catch (error) {\n      console.error('Error fetching airports:', error);\n    }\n  };\n\n  useEffect(() => {\n    loadAirports();\n  }, []); // Empty dependency array to run only on mount\n\n  // Handle the success of adding an airport\n  const handleSuccess = () => {\n    loadAirports(); // Reload airports after successful form submission\n    setShowForm(false); // Close the form\n  };\n\n  const handleCancel = () => {\n    setShowForm(false); // Close the form without adding an airport\n  };\n\n  return (\n    <div>\n      <h1>Airports</h1>\n      <button onClick={() => setShowForm(true)}>Add New Airport</button>\n\n      {showForm && (\n        <AirportForm onCancel={handleCancel} onSuccess={handleSuccess} />\n      )}\n\n      <div>\n        <h2>Airport List</h2>\n        <ul>\n          {airports.map((airport) => (\n            <li key={airport.id}>{airport.name}</li> // Adjust based on your data structure\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,iBAAiB,CAAC,CAAC;AACjD,OAAOC,WAAW,MAAM,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMX,aAAa,CAAC,CAAC,CAAC,CAAC;MACpCO,WAAW,CAACI,IAAI,CAACA,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMI,aAAa,GAAGA,CAAA,KAAM;IAC1BJ,YAAY,CAAC,CAAC,CAAC,CAAC;IAChBD,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBN,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;EACtB,CAAC;EAED,oBACEN,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBjB,OAAA;MAAQkB,OAAO,EAAEA,CAAA,KAAMZ,WAAW,CAAC,IAAI,CAAE;MAAAO,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAEjEZ,QAAQ,iBACPL,OAAA,CAACF,WAAW;MAACqB,QAAQ,EAAEP,YAAa;MAACQ,SAAS,EAAET;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjE,eAEDjB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBjB,OAAA;QAAAa,QAAA,EACGV,QAAQ,CAACkB,GAAG,CAAEC,OAAO,iBACpBtB,OAAA;UAAAa,QAAA,EAAsBS,OAAO,CAACC;QAAI,GAAzBD,OAAO,CAACE,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAoB,CAAC,CAAC;QAC1C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA/CID,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAiDT,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}