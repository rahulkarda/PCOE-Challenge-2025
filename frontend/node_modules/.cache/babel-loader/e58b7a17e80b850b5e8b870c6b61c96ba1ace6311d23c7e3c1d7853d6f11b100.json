{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// const AirportTable = ({\n//   airports,        // List of airports fetched from API\n//   searchQuery,     // Filter query passed from App.js\n//   sortBy,          // Sort field\n//   sortOrder,       // Sort order (asc/desc)\n//   onSort,          // Callback to handle sorting\n//   pagination,      // Pagination data (page, limit, total)\n//   setPagination,   // Function to update pagination\n// }) => {\n//   const [filteredAirports, setFilteredAirports] = useState(airports);\n\n//   // Apply filter based on airport name search query\n//   useEffect(() => {\n//     if (searchQuery) {\n//       const filtered = airports.filter((airport) =>\n//         airport.name.toLowerCase().includes(searchQuery.toLowerCase())\n//       );\n//       setFilteredAirports(filtered);\n//     } else {\n//       setFilteredAirports(airports);\n//     }\n//   }, [searchQuery, airports]);\n\n//   // Sorting logic for table columns\n//   const handleSort = (field) => {\n//     const newSortOrder = field === sortBy && sortOrder === \"asc\" ? \"desc\" : \"asc\";\n//     onSort(field, newSortOrder); // Notify parent to update sort state\n//   };\n\n//   // Pagination calculations\n//   const totalPages = Math.ceil(pagination.total / pagination.limit);\n\n//   return (\n//     <div>\n//       {/* Table */}\n//       <table className=\"w-full border\">\n//         <thead>\n//           <tr>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"name\")}>\n//               Name {sortBy === \"name\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"city\")}>\n//               City {sortBy === \"city\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"state\")}>\n//               State {sortBy === \"state\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"country\")}>\n//               Country {sortBy === \"country\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"region\")}>\n//               Region\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"elevation\")}>\n//               Elevation {sortBy === \"elevation\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"iata\")}>\n//               IATA {sortBy === \"iata\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"icao\")}>\n//               ICAO {sortBy === \"icao\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"lat\")}>\n//               Latitude {sortBy === \"lat\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"lon\")}>\n//               Longitude {sortBy === \"lon\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"tz\")}>\n//               Timezone {sortBy === \"tz\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredAirports.map((airport, idx) => (\n//             <tr key={idx} className={airport.elevation > 8000 ? \"bg-red-100 font-bold\" : \"\"}>\n//               <td className=\"p-2 border\">{airport.name}</td>\n//               <td className=\"p-2 border\">{airport.city}</td>\n//               <td className=\"p-2 border\">{airport.state || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.country}</td>\n//               <td className=\"p-2 border\">{airport.region || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.elevation} ft</td>\n//               <td className=\"p-2 border\">{airport.iata || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.icao || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.lat || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.lon || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.tz || \"-\"}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Pagination Controls */}\n//       <div className=\"flex justify-center gap-2 mt-4\">\n//         <button\n//           disabled={pagination.page === 1}\n//           onClick={() => setPagination((prev) => ({ ...prev, page: pagination.page - 1 }))}\n//           className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded disabled:opacity-50\"\n//         >\n//           Previous\n//         </button>\n//         <span className=\"px-3 py-1 text-sm text-gray-700\">\n//           Page {pagination.page} of {totalPages}\n//         </span>\n//         <button\n//           disabled={pagination.page === totalPages}\n//           onClick={() => setPagination((prev) => ({ ...prev, page: pagination.page + 1 }))}\n//           className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded disabled:opacity-50\"\n//         >\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AirportTable;","map":{"version":3,"names":[],"sources":["/Users/I528952/Downloads/airportv3/frontend/src/components/AirportTable.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// const AirportTable = ({\n//   airports,        // List of airports fetched from API\n//   searchQuery,     // Filter query passed from App.js\n//   sortBy,          // Sort field\n//   sortOrder,       // Sort order (asc/desc)\n//   onSort,          // Callback to handle sorting\n//   pagination,      // Pagination data (page, limit, total)\n//   setPagination,   // Function to update pagination\n// }) => {\n//   const [filteredAirports, setFilteredAirports] = useState(airports);\n\n//   // Apply filter based on airport name search query\n//   useEffect(() => {\n//     if (searchQuery) {\n//       const filtered = airports.filter((airport) =>\n//         airport.name.toLowerCase().includes(searchQuery.toLowerCase())\n//       );\n//       setFilteredAirports(filtered);\n//     } else {\n//       setFilteredAirports(airports);\n//     }\n//   }, [searchQuery, airports]);\n\n//   // Sorting logic for table columns\n//   const handleSort = (field) => {\n//     const newSortOrder = field === sortBy && sortOrder === \"asc\" ? \"desc\" : \"asc\";\n//     onSort(field, newSortOrder); // Notify parent to update sort state\n//   };\n\n//   // Pagination calculations\n//   const totalPages = Math.ceil(pagination.total / pagination.limit);\n\n//   return (\n//     <div>\n//       {/* Table */}\n//       <table className=\"w-full border\">\n//         <thead>\n//           <tr>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"name\")}>\n//               Name {sortBy === \"name\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"city\")}>\n//               City {sortBy === \"city\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"state\")}>\n//               State {sortBy === \"state\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"country\")}>\n//               Country {sortBy === \"country\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"region\")}>\n//               Region\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"elevation\")}>\n//               Elevation {sortBy === \"elevation\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"iata\")}>\n//               IATA {sortBy === \"iata\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"icao\")}>\n//               ICAO {sortBy === \"icao\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"lat\")}>\n//               Latitude {sortBy === \"lat\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"lon\")}>\n//               Longitude {sortBy === \"lon\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//             <th className=\"p-2 border cursor-pointer\" onClick={() => handleSort(\"tz\")}>\n//               Timezone {sortBy === \"tz\" && (sortOrder === \"asc\" ? \"↑\" : \"↓\")}\n//             </th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredAirports.map((airport, idx) => (\n//             <tr key={idx} className={airport.elevation > 8000 ? \"bg-red-100 font-bold\" : \"\"}>\n//               <td className=\"p-2 border\">{airport.name}</td>\n//               <td className=\"p-2 border\">{airport.city}</td>\n//               <td className=\"p-2 border\">{airport.state || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.country}</td>\n//               <td className=\"p-2 border\">{airport.region || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.elevation} ft</td>\n//               <td className=\"p-2 border\">{airport.iata || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.icao || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.lat || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.lon || \"-\"}</td>\n//               <td className=\"p-2 border\">{airport.tz || \"-\"}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n\n//       {/* Pagination Controls */}\n//       <div className=\"flex justify-center gap-2 mt-4\">\n//         <button\n//           disabled={pagination.page === 1}\n//           onClick={() => setPagination((prev) => ({ ...prev, page: pagination.page - 1 }))}\n//           className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded disabled:opacity-50\"\n//         >\n//           Previous\n//         </button>\n//         <span className=\"px-3 py-1 text-sm text-gray-700\">\n//           Page {pagination.page} of {totalPages}\n//         </span>\n//         <button\n//           disabled={pagination.page === totalPages}\n//           onClick={() => setPagination((prev) => ({ ...prev, page: pagination.page + 1 }))}\n//           className=\"px-3 py-1 bg-gray-200 hover:bg-gray-300 rounded disabled:opacity-50\"\n//         >\n//           Next\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AirportTable;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}